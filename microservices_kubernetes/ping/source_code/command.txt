DOCKER & KUBERNETES
------------------------------

run app
------------------------------
go run main.go

Raising Server / Running Compile Daemon. Within ping folder
------------------------------
CompileDaemon -command="./ping"

Compiling binary to upload to Docker
------------------------------
$Env:GOOS = "linux"
$Env:CGO_ENABLED=0
go build -o docker_ping_exe
go build main.go

build image
------------------------------
docker build --tag docker_ping_image .

--list images
docker image ls

--list containers
docker ps
docker ps -all
docker ps -a

--stop containers
docker stop unruffled_goldberg

--restart container
docker restart unruffled_goldberg

--remove containers
docker rm unruffled_goldberg
docker rm boring_villani

run image locally
------------------------------

--To break it down explicitly: -p 8080:8080 means redirecting traffic from port 8080 on all interfaces in the main network namespace to the containerâ€™s port 8080 on its external interface.

docker run --rm -p 80:80 k8s_ecr_public_repo_blogs

docker run --publish 8080:8080 docker_ping_image

--detached mode
docker run -d -p 8080:8080 docker_ping_image

--Private repo / Upload image
------------------------------

aws ecr get-login-password --region us-east-1 --profile dev | docker login --username AWS --password-stdin 826738023599.dkr.ecr.us-east-1.amazonaws.com

docker tag 66b0c125b9d6 826738023599.dkr.ecr.us-east-1.amazonaws.com/docker_ping_repo_priv:1
                        
docker push 826738023599.dkr.ecr.us-east-1.amazonaws.com/docker_ping_repo_priv:1

    repo URI: 826738023599.dkr.ecr.us-east-1.amazonaws.com/docker_ping_repo_priv

    image URI: 826738023599.dkr.ecr.us-east-1.amazonaws.com/docker_ping_repo_priv:1

--Public repo / Upload image
-----------------------------

aws ecr-public get-login-password --region us-east-1 --profile dev | docker login --username AWS --password-stdin public.ecr.aws/h9e6x2j6/docker_ping_repo_pub

docker tag 66b0c125b9d6 public.ecr.aws/h9e6x2j6/docker_ping_repo_pub:1

docker push public.ecr.aws/h9e6x2j6/docker_ping_repo_pub:1

    repo URI: public.ecr.aws/h9e6x2j6/docker_ping_repo_pub

    image URI: public.ecr.aws/h9e6x2j6/docker_ping_repo_pub:1

Other commands
--------------

docker image tag docker_ping_image:latest docker_ping_image:v1.0

docker image rm docker_ping_image:v1.0

docker image rm docker_ping_image

docker build -t docker_ping_image:multistage -f Dockerfile.multistage .

KUBERNETES
--------------

Creating .kube config file on C:\Users\Juan Manuel\.kube\config
--------------
aws eks --region us-east-1 update-kubeconfig --name k8s_eks_cluster_kite --profile dev

Connecting to Kubernetes cluster
--------------
kubectl get svc

Create namespace
--------------
kubectl create namespace ping-app-namespace

Create Pods and Services
--------------
kubectl apply -f D:\projects\golang_aws_terraform_jenkins\microservices_kubernetes\k8s_deployment\source_code\ping_app.yaml

List Pods
--------------
kubectl get pods -n ping-app-namespace
kubectl get pods --all-namespaces 

List Services
--------------
kubectl get svc -n ping-app-namespace
kubectl get all -n ping-app-namespace

external-ping-app-service
http://a5dcaa3f9aa3f43588d2cf97865c525b-d0d65005246030e0.elb.us-east-1.amazonaws.com:8080

Describe Services
--------------
	kubectl describe svc -n ping-app-namespace internal-ping-app-service
	kubectl describe svc -n ping-app-namespace external-ping-app-service
    kubectl describe svc kubernetes