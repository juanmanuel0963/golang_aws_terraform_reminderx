---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: blogs-app-deployment
  namespace: blogs-app-namespace
  labels:
    app: blogs-app
spec:
  replicas: 1 
  selector:
    matchLabels:
      app: blogs-app
  template:
    metadata:
      labels:
        app: blogs-app
    spec:
      containers:
      - name: blogs-app
        image: public.ecr.aws/h9e6x2j6/k8s_ecr_public_repo_blogs:v1.0
        env:
        - name: PORT
          value: "80"
        - name: db_conn
          value: 'host=db-server-postgresql-kite.cm03k8s4ogkh.us-east-1.rds.amazonaws.com user=db_master password=****** dbname=db_postgresql_kite port=5432 sslmode=disable'
        ports:         
        - containerPort: 80          
---
apiVersion: v1
kind: Service
metadata:
  name: internal-blogs-app-service
  namespace: blogs-app-namespace
  annotations:
    service.beta.kubernetes.io/aws-load-balancer-type: nlb
    service.beta.kubernetes.io/aws-load-balancer-cross-zone-load-balancing-enabled: 'true'
    service.beta.kubernetes.io/aws-load-balancer-internal: 0.0.0.0/0
spec:
  selector:
    app: blogs-app
  type: LoadBalancer
  #op1
  #externalTrafficPolicy: Local
  #loadBalancerSourceRanges: - <elastic-ip>  
  #op2
  #loadBalancerIP: xx.xx.xx.xx
  ports:
    - protocol: TCP
      port: 80
---
apiVersion: v1
kind: Service
metadata:
  name: external-blogs-app-service
  namespace: blogs-app-namespace
  annotations:
    service.beta.kubernetes.io/aws-load-balancer-type: nlb
    service.beta.kubernetes.io/aws-load-balancer-cross-zone-load-balancing-enabled: 'true'
    service.beta.kubernetes.io/aws-load-balancer-ssl-cert: "arn:aws:acm:us-east-1:826738023599:certificate/0ee99684-fea1-4091-9876-fad2a51f2099"
    service.beta.kubernetes.io/aws-load-balancer-backend-protocol: http
spec:
  selector:
    app: blogs-app
  type: LoadBalancer
  #op1
  #externalTrafficPolicy: Local
  #loadBalancerSourceRanges: - <elastic-ip>  
  #op2
  #loadBalancerIP: xx.xx.xx.xx
  ports:
    - protocol: TCP
      port: 443
      name: https
      targetPort: 80